server {

    listen 80;
    listen [::]:80;

    server_name srv0.pp.ua;

  charset utf-8;
  index index.php index.html;
  disable_symlinks if_not_owner from=$root_path;
  set $root_path /var/www;
  root $root_path;
 
#  charset UTF-8;
 # autoindex off;

  # Show "Not Found" 404 errors in place of "Forbidden" 403 errors, because
  # forbidden errors allow attackers potential insight into your server's
  # layout and contents
  error_page 403 =404;

  # It's always good to set logs, note however you cannot turn off the error log
  # Setting error_log off; will simply create a file called 'off'
  access_log /var/log/nginx/domain.com.access.log;
  error_log /var/log/nginx/domain.com.error.log;

  # Vqmod settings
  # Add trailing slash to */vqmod/install requests.
  rewrite /vqmod/install$ $scheme://$host$uri/ permanent;
  
  # Run index.php on /vqmod/install calls
  location /vqmod/install/ {
    index index.php;
  }
  
  # Nginx configuration of vqmod htaccess
  location /srv/www/domain.com/htdocs/vqmod/ {
    location ~ \.(xml|cache) {
      deny all;
    }
  }
  # End Vqmod settings
  
  # SEO URL Settings
  # Nginx configuration of OC htaccess
  location = /sitemap.xml {
    rewrite ^(.*)$ /index.php?route=feed/google_sitemap break; 
  } 

  location = /googlebase.xml {
    rewrite ^(.*)$ /index.php?route=feed/google_base break; 
  } 

#  location / {
#    # This try_files directive is used to enable SEO-friendly URLs for OpenCart
#    try_files $uri $uri/ @opencart;
 # }
   location / {
        try_files $uri /index.php$is_args$args;
    }

  location @opencart {
    rewrite ^/(.+)$ /index.php?_route_=$1 last;
  }
  # End SEO settings

  # Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
  location ~* \.(engine|inc|info|ini|install|log|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$|\.php_ {
    deny all;
  }

  # Do not log access to the favicon, to keep the logs cleaner
#  location = /favicon.ico {
#    log_not_found off;
#    access_log off;
 # }

  location = /apple-touch-icon.png {
    log_not_found off;
    access_log off;
  }

  location = /apple-touch-icon-precomposed.png {
    log_not_found off;
    access_log off;
  }

  # This block will catch static file requests, such as images, css, js
  # The ?: prefix is a 'non-capturing' mark, meaning we do not require
  # the pattern to be captured into $1 which should help improve performance
  location ~* \.(?:3gp|gif|jpg|jpe?g|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|txt|js|css|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|woff|woff2|eot|otf|ttf)$ {
    # Some basic cache-control for static files to be sent to the browser
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~ /\. {
    access_log off;
    log_not_found off;
    deny all;
  }

  location ~ ~$ {
    access_log off;
    log_not_found off;
    deny all;
  }

  # Deny access to any files with a .php extension in these directories
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:cache|logs|image|download)/.*\.php$ {
    deny all;
  }
  
  # Make sure these get through
  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }
  
  # Fix for Firefox issue with cross site font icons
  location ~* \.(eot|otf|ttf|woff)$ {
    add_header Access-Control-Allow-Origin *;
  }

  # redirect server error pages to the static page /50x.html
  error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    root /usr/share/nginx/www;
  }




    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #    fastcgi_pass php-fpm:9000;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    error_log /var/log/nginx/laravel_error.log;
    access_log /var/log/nginx/laravel_access.log;
}
